import utils as us
import folium
import numpy as np
import pandas as pd
import streamlit as st
import PIL.Image as imgpil
from folium import plugins
import plotly.express as px
from streamlit_folium import folium_static

# ----------------------------------------------------------------

# st.set_page_config(page_title='Pa√≠ses', page_icon='üåê', layout='wide')

# ----------------------------------------------------------------
# Chama fun√ß√µes em util.py

# df_raw recebe fun√ß√£o 'def extract_data' em utils
df_raw = us.extract_data()

# Copia o dataframe original (df_raw) para o de trabalho (df)
df = df_raw.copy()

# Fun√ß√£o que renomea a colunas
df = us.rename_columns(df)

# Fun√ß√£o que renomea a colunas
df = us.rename_columns(df)

# Fun√ß√£o que gera o c√≥digo ao nome de cada pais
df['country_code'] = df['country_code'].apply(us.country_name)

# Fun√ß√£o que categoriza a comida peloa faixa de pre√ßo
df['price_type'] = df.loc[:, 'price_range'].apply(lambda x: us.create_price_tye(x))


# # caminho relativo (deploy)
# def extract_data(path='data/zomato.csv'):
#     return pd.read_csv(path)

# # 1.Fun√ß√£o que l√™ o dataframe
# df = extract_data()

# # 2. Chama a fun√ß√£o que extraiu o dataframe
# df = extract_data
# df_raw = extract_data()

# # 3. Copia o dataframe original (df_raw) para o de trabalho (df)
# df = df_raw.copy()


# ------------------------------------------------------------------------------------------
# FUN√á√ïES GR√ÅFICAS

# 1. Qual o nome do pa√≠s que possui mais cidades registradas?
def city_country(df):
    # Agrupa a quantidade de cidades por pa√≠s usando o nome do pa√≠s
    pais = df.groupby('country_code')['city'].nunique().sort_values(ascending=False).reset_index()

    # gr√°fico
    fig = px.bar(pais, x=pais['country_code'], y=pais['city']
                 ,title='Quantidade de cidades por Pa√≠s'
                 ,labels={'country_code': 'Pa√≠s', 'city': 'Qtde Cidades'})
    fig.update_traces(texttemplate = '%{y}') 
    return fig
    
# 2. Qual o nome do pa√≠s que possui mais restaurantes registrados?
def restaurant_country(df):
    # Agrupa a quantidade de cidades por pa√≠s usando o nome do pa√≠s
    country=(df.groupby('country_code')['restaurant_id']
            .nunique()
            .sort_values(ascending=False)
            .reset_index())

    # gr√°fico
    fig = px.bar(country, x=country['country_code'], y=country['restaurant_id']
                 ,title='Quantidade de cidades por Pa√≠s'
                 ,labels={'country_code': 'Pa√≠s', 'restaurant_id': 'Qtde de restaurantes'})
    fig.update_traces(texttemplate = '%{y}')
    return fig


# 3. Qual o nome do pa√≠s que possui mais restaurantes com o n√≠vel de pre√ßo igual a 4 registrados?
def level_price(df): 
    level_price=(df.loc[df['price_range'] == 4, ['restaurant_id', 'country_code']]
                 .groupby('country_code')
                 .count()
                 .sort_values('restaurant_id', ascending=False)
                 .reset_index())
    # gr√°fico
    fig = px.bar(level_price, x=level_price['country_code'],y=level_price['restaurant_id']
                 ,title='Pa√≠ses com restaurantes n√≠vel 4'
                 ,labels={'country_code': 'Pa√≠s', 'restaurant_id': 'Qtde restaurant gourmet'})
    fig.update_traces(texttemplate = '%{y}')
    return fig

# ------------------------------------------------------------------------------------------
# SIDEBAR

image = imgpil.open('logo_restaurant.png')
st.sidebar.image(image, use_column_width='auto')

# Filtro multiseletor de paises
st.sidebar.markdown('### Escolha o pa√≠s.')
st.sidebar.markdown('''---''')

with st.sidebar.container():
    st.markdown('## VIS√ÉO PA√çSES')

    country_options = st.sidebar.multiselect('', sorted(set(df['country_code'].unique())),
    default=['Brazil', 'India','United States of America','South Africa', 'Canada'] )
    
    linhas_selecionadas = df['country_name'].isin(country_options)
    df = df.loc[linhas_selecionadas, :]

st.sidebar.markdown('''---''')
st.sidebar.markdown('''## Powered by J√∫lio Reis''')

# ------------------------------------------
# LAYOUT STREAMLIT

with st.container():
    # Chama a fun√ß√£o 'def city_country' para plotar o gr√°fico de barras
    fig = city_country(df)
    st.plotly_chart(fig, use_container_width=True)

with st.container():
    col1, col2 = st.columns(2)
    with col1:
        # Chama a fun√ß√£o 'def restaurant_country' para plotar o gr√°fico de barras
        fig = restaurant_country(df)
        st.plotly_chart(fig, use_container_width=True)

    with col2:
        # Chama a fun√ß√£o 'def level_price' para plotar o gr√°fico de barras
        fig = level_price(df)
        st.plotly_chart(fig, use_container_width=True)

        
        
