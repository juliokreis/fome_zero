import utils as us
import folium
import numpy as np
import pandas as pd
import streamlit as st
import PIL.Image as imgpil
from folium import plugins
import plotly.express as px
from streamlit_folium import folium_static

# ----------------------------------------------------------------

# st.set_page_config(page_title='Pa√≠ses', page_icon='üåê', layout='wide')

# ----------------------------------------------------------------
# Chama fun√ß√µes em util.py

# caminho relativo (deploy)
def extract_data(path='data/zomato.csv'):
    return pd.read_csv(path)

# 1.Fun√ß√£o que l√™ o dataframe
df = extract_data()

# 2. Chama a fun√ß√£o que extraiu o dataframe
df = extract_data
df_raw = extract_data()

# 3. Copia o dataframe original (df_raw) para o de trabalho (df)
df = df_raw.copy()
# ------------------------------------------------------------------------------------------
# FUN√á√ïES GR√ÅFICAS

def cidades_por_pais(df):
    # Agrupa a quantidade de cidades por pa√≠s usando o nome do pa√≠s
    pais = df.groupby('country_code')['city'].nunique().sort_values(ascending=False).reset_index()

    # gr√°fico
    fig = px.bar(pais, x=pais['country_code'], y=pais['city'])
    fig = px.bar(pais, x='country_code',y='city',
                title='Quantidade de cidades por Pa√≠s',
                labels={'country_code': 'Pa√≠s', 'city': 'Qtde Cidades'})
    fig.update_traces(texttemplate = '%{y}') 
    return fig


def restaurantes_por_pais(df):
    # Agrupa a quantidade de cidades por pa√≠s usando o nome do pa√≠s
    pais = df.groupby('country_code')['restaurant_id'].nunique().sort_values(ascending=False).reset_index()

    # gr√°fico
    fig = px.bar(pais, x='country_code', y='restaurant_id')
    fig = px.bar(pais, x='country_code',y='restaurant_id',
                title='Quantidade de cidades por Pa√≠s',
                labels={'country_code': 'Pa√≠s', 'restaurant_id': 'Qtde de restaurantes'})
    fig.update_traces(texttemplate = '%{y}')
    return fig

# ------------------------------------------------------------------------------------------
# SIDEBAR

image = imgpil.open('logo_restaurant.png')
st.sidebar.image(image, use_column_width='auto')

# Filtro multiseletor de paises
st.sidebar.markdown('### Escolha o pa√≠s.')
st.sidebar.markdown('''---''')

with st.container():
    st.markdown('## VIS√ÉO PA√çSES')

    # Filtro multiseletor de paises

    df['country_name'] = df['country_code'].apply(country_name).unique()
    country_options = st.sidebar.multiselect('', sorted(set(df['country_name'].unique())),
    default=['Brazil', 'India','United States of America','South Africa', 'Canada'] )
    
    linhas_selecionadas = df['country_code'].isin(country_options)
    df = df.loc[linhas_selecionadas, :]

st.sidebar.markdown('''---''')
st.sidebar.markdown('''## Powered by J√∫lio Reis''')

# ------------------------------------------
# LAYOUT STREAMLIT

with st.container():
    # Chama a fun√ß√£o 'def cidades_por_pais' para plotar o gr√°fico de barras
    fig = cidades_por_pais(df)
    st.plotly_chart(fig, use_container_width=True)

with st.container():
    col1, col2 = st.columns(2)
    with col1:
        st.markdown('Gr√°fico 2')
        # # Chama a fun√ß√£o 'def cidades_por_pais' para plotar o gr√°fico de barras
        # fig = restaurantes_por_pais(df)
        # st.plotly_chart(fig, use_container_width=True)

    with col2:
        st.markdown('Gr√°fico 3')
        
        
