import utils as us
import folium
import numpy as np
import pandas as pd
import streamlit as st
import PIL.Image as imgpil
from folium import plugins
import plotly.express as px
from streamlit_folium import folium_static

# ----------------------------------------------------------------

# st.set_page_config(page_title='Pa칤ses', page_icon='游깷', layout='wide')

# ----------------------------------------------------------------
# Chama fun칞칫es em util.py

# 2. df_raw recebe fun칞칚o 'def extract_data' em utils
df_raw = us.extract_data()

# 3. Copia o dataframe original (df_raw) para o de trabalho (df)
df = df_raw.copy()

# 4.Fun칞칚o que renomea a colunas
df = us.rename_columns(df)

# # caminho relativo (deploy)
# def extract_data(path='data/zomato.csv'):
#     return pd.read_csv(path)

# # 1.Fun칞칚o que l칡 o dataframe
# df = extract_data()

# # 2. Chama a fun칞칚o que extraiu o dataframe
# df = extract_data
# df_raw = extract_data()

# # 3. Copia o dataframe original (df_raw) para o de trabalho (df)
# df = df_raw.copy()
# ------------------------------------------------------------------------------------------
# FUN칂칏ES 

# DE TROCA
# 4.Fun칞칚o que gera o c칩digo ao nome de cada pais
df['country_name'] = df['country_code'].apply(us.country_name)

# GR츼FICAS

# 1. Qual o nome do pa칤s que possui mais cidades registradas?
def cidades_por_pais(df):

    # Cria uma nova coluna 'country_name' substituindo o c칩digo pelo nome
    df['country_name'] = df['country_code'].apply(us.country_name)
    
    # Agrupa a quantidade de cidades por pa칤s usando o nome do pa칤s
    pais = df.groupby('country_name')['city'].nunique().sort_values(ascending=False).reset_index()
    
    # gr치fico
    fig = px.bar(pais, x=pais['country_code'], y=pais['city'],
                title='Quantidade de cidades por Pa칤s',
                labels={'country_code': 'Pa칤s', 'city': 'Qtde Cidades'})
    fig.update_traces(texttemplate = '%{y}') 
    return fig
    
# 2. Qual o nome do pa칤s que possui mais restaurantes registrados?
def restaurantes_por_pais(df):
    # Agrupa a quantidade de cidades por pa칤s usando o nome do pa칤s
    pais = df.groupby('country_code')['restaurant_id'].nunique().sort_values(ascending=False).reset_index()

    # gr치fico
    fig = px.bar(pais, x='country_code', y='restaurant_id')
    fig = px.bar(pais, x='country_code',y='restaurant_id',
                title='Quantidade de cidades por Pa칤s',
                labels={'country_code': 'Pa칤s', 'restaurant_id': 'Qtde de restaurantes'})
    fig.update_traces(texttemplate = '%{y}')
    return fig

def nivel_4(df):
    df['price_type'] = df.loc[:, 'price_range'].apply(lambda x: create_price_tye(x))

    price_type_counts = df['price_type'].value_counts().reset_index()
    price_type_counts.columns = ['price_type', 'count']
    df.sort_values(by='count', ascending=False)
    
    # grafico de barras
    fig = px.bar(df, x='country_name',y='restaurant_id',
                title='Pa칤ses com restaurantes n칤vel 4',
                labels={'country_name': 'Pa칤s', 'restaurant_id': 'Qtde de restaurantes'})
    fig.update_traces(texttemplate = '%{y}')
    return fig

# ------------------------------------------------------------------------------------------
# SIDEBAR

image = imgpil.open('logo_restaurant.png')
st.sidebar.image(image, use_column_width='auto')

# Filtro multiseletor de paises
st.sidebar.markdown('### Escolha o pa칤s.')
st.sidebar.markdown('''---''')

with st.container():
    st.markdown('## VIS츾O PA칈SES')

    country_options = st.sidebar.multiselect('', sorted(set(df['country_name'].unique())),
    default=['Brazil', 'India','United States of America','South Africa', 'Canada'] )
    
    linhas_selecionadas = df['country_name'].isin(country_options)
    df = df.loc[linhas_selecionadas, :]

st.sidebar.markdown('''---''')
st.sidebar.markdown('''## Powered by J칰lio Reis''')

# ------------------------------------------
# LAYOUT STREAMLIT

with st.container():
    # Chama a fun칞칚o 'def cidades_por_pais' para plotar o gr치fico de barras
    fig = cidades_por_pais(df)
    st.plotly_chart(fig, use_container_width=True)

with st.container():
    col1, col2 = st.columns(2)
    with col1:
        st.markdown('Gr치fico 2')
        # Chama a fun칞칚o 'def cidades_por_pais' para plotar o gr치fico de barras
        # fig = restaurantes_por_pais(df)
        # st.plotly_chart(fig, use_container_width=True)

    with col2:
        st.markdown('Gr치fico 3')
        # Chama a fun칞칚o 'def cidades_por_pais' para plotar o gr치fico de barras
        # fig = nivel_4(df)
        # st.plotly_chart(fig, use_container_width=True)

        
        
